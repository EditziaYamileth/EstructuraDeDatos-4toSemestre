package unidad2;

import java.util.Scanner;

public class SolucionSistemaEcuaciones {
    static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        String negrita = "\033[1m";
        String reset = "\033[0m";
        String espacio = "         ";

        System.out.println(espacio + negrita + "Instituto Tecnológico de Culiacán" + reset);
        System.out.println(espacio + negrita + "Ing. En sistemas computacionales\n" + reset);
        System.out.println(espacio + negrita + "Villa Zuñiga Luciano Ivan." + reset);
        System.out.println(espacio + negrita + "Solución de Sistema de Ecuaciones." + reset);
        System.out.println(espacio + negrita + "De 13:00 a 14:00 horas.\n" + reset);
        System.out.println("Este programa ejecuta la solución de problemas");
        System.out.println("utilizando los procesos lógicos de Solución de sistemas");
        System.out.println("de Ecuaciones utilizando diversos métodos numéricos.\n");

        System.out.print(negrita + "Pregunta del Problema: " + reset);
        String pregunta = scanner.nextLine();

        int ordenMatriz;
        do {
            System.out.print(negrita + "Orden de la matriz (2-10): " + reset);
            ordenMatriz = scanner.nextInt();
        } while (ordenMatriz > 10 || ordenMatriz < 2);

        scanner.nextLine(); // Limpiar el buffer

        String[] nombresVariables = new String[ordenMatriz];
        for (int i = 0; i < ordenMatriz; i++) {
            System.out.print("Nombre de la variable " + (i + 1) + ": ");
            nombresVariables[i] = scanner.nextLine();
        }

        System.out.print("Unidad de medida para los resultados: ");
        String unidadMedida = scanner.nextLine();

        int opcion;
        do {
            System.out.println("\n=== MENÚ DE OPCIONES ===");
            System.out.println("1. Usar Gauss-Jordan");
            System.out.println("2. Usar Gauss-Seidel");
            System.out.println("10. Salir");
            System.out.print("Selecciona una opción: ");
            opcion = scanner.nextInt();
            scanner.nextLine(); // Limpiar el buffer

            switch (opcion) {
                case 1:
                    
                    double[][] matriz = new double[ordenMatriz][ordenMatriz + 1];
                    System.out.println("\n=== MÉTODO DE GAUSS-JORDAN ===");
                    System.out.println("\nCaptura los datos de la matriz:");
                    for (int i = 0; i < ordenMatriz; i++) {
                        for (int j = 0; j < ordenMatriz + 1; j++) {
                            if (j < ordenMatriz) {
                                System.out.print("Valor matriz [" + (i + 1) + "," + (j + 1) + "] de " + nombresVariables[i] + ": ");
                            } else {
                                System.out.print("Valor independiente [" + (i + 1) + "," + (j + 1) + "] de " + nombresVariables[i] + ": ");
                            }
                            matriz[i][j] = scanner.nextDouble();
                        }
                    }
                    
                    System.out.println();
                    System.out.println(espacio + negrita + "Instituto Tecnológico de Culiacán" + reset);
                    System.out.println(espacio + negrita + "Ing. En sistemas computacionales\n" + reset);
                    System.out.println(espacio + negrita + "Villa Zuñiga Luciano Ivan." + reset);
                    System.out.println(espacio + negrita + "Solución de Sistema de Ecuaciones." + reset);
                    System.out.println(espacio + negrita + "De 13:00 a 14:00 horas.\n" + reset);
                    System.out.print(negrita + "Pregunta del Problema: " + reset);
                    System.out.println(pregunta);

                    System.out.println("\nMatriz de datos:");
                    imprimirMatriz(ordenMatriz, matriz);

                    for (int k = 0; k < ordenMatriz - 1; k++) {
                        double pivote = matriz[k][k];
                        for (int f = k + 1; f < ordenMatriz; f++) {
                            double elementoCero = matriz[f][k];
                            for (int c = k; c < ordenMatriz + 1; c++) {
                                matriz[f][c] = (pivote * matriz[f][c]) - (elementoCero * matriz[k][c]);
                            }
                        }
                    }

                    System.out.println("\nMatriz con ceros debajo de la diagonal:");
                    imprimirMatriz(ordenMatriz, matriz);

                    for (int k = ordenMatriz - 1; k >= 1; k--) {
                        double pivote = matriz[k][k];
                        for (int f = 0; f < k; f++) {
                            double factor = matriz[f][k] / pivote;
                            for (int c = k; c < ordenMatriz + 1; c++) {
                                matriz[f][c] = matriz[f][c] - (factor * matriz[k][c]);
                            }
                        }
                    }

                    System.out.println("\nMatriz con ceros arriba y debajo de la diagonal:");
                    imprimirMatriz(ordenMatriz, matriz);

                    for (int f = 0; f < ordenMatriz; f++) {
                        matriz[f][ordenMatriz] = matriz[f][ordenMatriz] / matriz[f][f];
                        matriz[f][f] = matriz[f][f] / matriz[f][f];
                    }

                    System.out.println("\nMatriz Identidad:");
                    imprimirMatriz(ordenMatriz, matriz);

                    System.out.println("\nResultados:");
                    for (int i = 0; i < ordenMatriz; i++) {
                        System.out.printf("%s = %.2f %s%n", nombresVariables[i], matriz[i][ordenMatriz], unidadMedida);
                    }
                    break;
                case 2:
                	System.out.println();
                    System.out.println("\n=== MÉTODO DE GAUSS-SEIDEL ===");

                    double[] valoresAnteriores = new double[ordenMatriz];
                    double[] valoresActuales = new double[ordenMatriz];
                    for (int i = 0; i < ordenMatriz; i++) {
                        System.out.print("Ingresa el valor inicial de " + nombresVariables[i] + ": ");
                        valoresAnteriores[i] = scanner.nextDouble();
                        valoresActuales[i] = 0; 
                    }

                
                    System.out.print("Ingresa el error permitido: ");
                    double errorPermitido = scanner.nextDouble();
                    System.out.print("Ingresa el número máximo de iteraciones: ");
                    int maxIteraciones = scanner.nextInt();

                    
                    double[][] matriz1 = new double[ordenMatriz][ordenMatriz + 1];
                    
                    System.out.println("Captura los datos de la matriz");
                    for (int i = 0; i < ordenMatriz; i++) {
                        for (int j = 0; j < ordenMatriz + 1; j++) {
                            if (j < ordenMatriz) {
                                System.out.print("Valor matriz [" + (i + 1) + "," + (j + 1) + "] de " + nombresVariables[i] + ": ");
                            } else {
                                System.out.print("Valor independiente [" + (i + 1) + "," + (j + 1) + "] de " + nombresVariables[i] + ": ");
                            }
                            matriz1[i][j] = scanner.nextDouble();
                        }
                    }
                    
                    System.out.println();
                    System.out.println(espacio + negrita + "Instituto Tecnológico de Culiacán" + reset);
                    System.out.println(espacio + negrita + "Ing. En sistemas computacionales\n" + reset);
                    System.out.println(espacio + negrita + "Villa Zuñiga Luciano Ivan." + reset);
                    System.out.println(espacio + negrita + "Solución de Sistema de Ecuaciones." + reset);
                    System.out.println(espacio + negrita + "De 13:00 a 14:00 horas.\n" + reset);
                    System.out.print(negrita + "Pregunta del Problema: " + reset);
                    System.out.println(pregunta);

                    
                    System.out.println("\nMatriz ingresada:");
                    imprimirMatriz(ordenMatriz, matriz1);

                   
                    int iteracion = 0;
                    double errorTotal;
                    do {
                        errorTotal = 0;

                      
                        for (int i = 0; i < ordenMatriz; i++) {
                            double suma = matriz1[i][ordenMatriz]; 
                            for (int j = 0; j < ordenMatriz; j++) {
                                if (i != j) {
                                    suma -= matriz1[i][j] * valoresActuales[j];
                                }
                            }
                            valoresActuales[i] = suma / matriz1[i][i];
                        }

                   
                        for (int i = 0; i < ordenMatriz; i++) {
                            errorTotal += Math.abs(valoresActuales[i] - valoresAnteriores[i]);
                            valoresAnteriores[i] = valoresActuales[i]; 
                        }

                        iteracion++;

                       
                        System.out.printf("\nIteración %d:\n", iteracion);
                        for (int i = 0; i < ordenMatriz; i++) {
                            System.out.printf("%s = %.6f\n", nombresVariables[i], valoresActuales[i]);
                        }
                        System.out.printf("Error total: %.6f\n", errorTotal);

                    } while (errorTotal > errorPermitido && iteracion < maxIteraciones);

                    
                    System.out.println("\n=== RESULTADOS FINALES ===");
                    for (int i = 0; i < ordenMatriz; i++) {
                        System.out.printf("%s = %.6f %s\n", nombresVariables[i], valoresActuales[i], unidadMedida);
                    }
                    break;
                case 10:
                    System.out.println("Saliendo del programa...");
                    break;
                default:
                    System.out.println("Opción no válida. Intenta de nuevo.");
            }
        } while (opcion != 10);

        System.out.println("Programa terminado.");
    }
    
    public static void imprimirMatriz(int orden, double[][] matriz) {
        System.out.println("--------------------------------------");
        for (int f = 0; f < orden; f++) {
            for (int c = 0; c < orden + 1; c++) {
                System.out.printf("%10.2f", matriz[f][c]);
            }
            System.out.println();
        }
        System.out.println("--------------------------------------");
    }
}